name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Combine CSS files into a single CSS file
      - name: Combine CSS files
        run: |
         cat styles/*.css > module.css

      # Get part of the tag after the `v`.
      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      # Substitute the Manifest and Download URLs in the module.json
      # for a FULL RELEASE
      # Remove HotReload and update version and download properties.
      - name: Modify Manifest to remove HotReload
        if: '!github.event.release.prerelease'
        id: sub_release_manifest_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          flags.hotReload: false
          version: ${{steps.get_version.outputs.version-without-v}}
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip
          styles: "[\"module.css\"]"
          esmodules: "[\"module.mjs\"]"

      # Substitute the Manifest and Download URLs in the module.json
      # for a PRE RELEASE.
      - name: Substitute Manifest and Download Links For Versioned Ones
        if: 'github.event.release.prerelease'
        id: sub_prerelease_manifest_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          flags.hotReload: false
          version: ${{steps.get_version.outputs.version-without-v}}
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip
          styles: "[\"module.css\"]"
          esmodules: "[\"module.mjs\"]"

        # Set up Node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
          cache: 'npm'

      # `npm ci` is recommended:
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
      - name: Install Dependencies
        run: npm ci

      # Run build scripts
      - name: Build All
        run: npm run build    

      # Create zip file.
      - name: Create ZIP archive
        run: zip -r ./module.zip module.json module.mjs module.css lang/

      # Create a release for this specific version.
      - name: Update Release with Files
        if: '!github.event.release.prerelease'
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ github.event.release.name }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json, ./module.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}

      # Create a release for this specific version.
      - name: Update Pre-release with Files
        if: 'github.event.release.prerelease'
        id: create_version_prerelease
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ github.event.release.name }}
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json, ./module.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}